format short
clear all
clc

%Convert Min to Max
Variables = {'x_1', 'x_2', 'x_3', 's_1', 's_2', 'A_1', 'A_2','Sol'};
OVariables = {'x_1','x_2', 'x_3', 's_1', 's_2', 'Sol'};
OrigC = [-7.5 3 0 0 0 -1 -1 0];
Info = [3 -1 -1 -1 0 1 0 3; 1 -1 1 0 -1 0 1 2];
b = [3; 2];
BV = [6 7];

%Phase 1 of Method
Cost = [0 0 0 0 0 -1 -1 0];
A = Info;
StartBV = find(Cost<0);

ZjCj = Cost(BV)*A - Cost;
InitialTable = array2table([ZjCj;A]);
InitialTable.Properties.VariableNames(1:size(A,2)) = Variables;

fprintf("PHASE 1 START \n");
RUN =true;
while RUN

ZC = ZjCj(1:end-1);
if any(ZC<0)
    fprintf("Current BFS not optimal \n");
    [EnterCol pvt_col] = min(ZC);
    fprintf('Entering Col = %d \n', pvt_col);

    sol = A(:, end);
    Column = A(:,pvt_col);
    if Column<0
        fprintf('Unbounded Soln \n');
    else
        for i=1:size(A,1)
           if Column(i)>0
               ratio(i) = sol(i)./Column(i);
           else
               ratio(i) = inf;
           end    
        end
        [MinRatio, pvt_row] = min(ratio);
        fprintf('Leaving Row = %d \n', pvt_row); 
    end
    BV(pvt_row) = pvt_col;
    pvt_key = A(pvt_row, pvt_col);

    A(pvt_row,:) = A(pvt_row,:)./pvt_key;
    for i=1:size(A,1)
        if i~=pvt_row
            A(i,:) = A(i,:)-A(i,pvt_col).*A(pvt_row,:);
        end
    end
    ZjCj = ZjCj-ZjCj(pvt_col).*A(pvt_row,:);

    ZCj = [ZjCj;A];
    Table = array2table(ZCj);
    Table.Properties.VariableNames(1:size(ZCj,2)) = Variables
fprintf('Phase 1 \n');
[BFS, A] = simp(A,BFS, Cost, Variables);

%Phase 2
fprintf('Phase 2 \n');
A(:,StartBV) = [];
OrigC(:,StartBV) = [];
[OptBFS, OptA] = simp(A,BFS, OrigC, Ovariables);

